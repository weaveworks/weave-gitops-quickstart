apiVersion: templates.weave.works/v1alpha2
kind: GitOpsTemplate
metadata:
  name: pipeline-view-promote-by-namespace
  namespace: {{.Values.pipelines.namespace}}
  annotations:
    templates.weave.works/profiles-enabled: "false"
    templates.weave.works/kustomizations-enabled: "false"
    templates.weave.works/credentials-enabled: "false"
  labels:
    weave.works/template-type: pipeline
spec:
  description: create a pipeline for soft tenancy when applications are isolated by namespace
  params:
    # Pipeline parameters
    - name: RESOURCE_NAME # Required parameter name for a valid template
      description: Name of the Pipeline
      required: true
    - name: RESOURCE_NAMESPACE
      description: Namespace for the Pipeline on the management cluster
      required: true
    # Application parameters - this template assumes consistent HelmRelease name and namespace across clusters
    - name: APP_NAME
      description: Name of the HelmRelease for your application
    - name: APP_NAMESPACE
      description: Namespace for the HelmRelease
    - name: APP_REPO_URL
      description: URL for source of HelmRelease in Git
    - name: APP_REPO_TYPE
      description: Git repo type
      options: [ "github","gitlab" ]
    - name: APP_REPO_BRANCH
      description: Branch to write updates to in Git
      default: "main"
    - name: GIT_CREDENTIALS_SECRET
      description: Name of the secret in RESOURCE_NAMESPACE containing credentials to create pull requests
  resourcetemplates:
    - content:
      - apiVersion: pipelines.weave.works/v1alpha1
        kind: Pipeline
        metadata:
          name: ${RESOURCE_NAME}
          namespace: ${RESOURCE_NAMESPACE}
        spec:
          appRef:
            apiVersion: helm.toolkit.fluxcd.io/v2beta1
            kind: HelmRelease
            name: ${APP_NAME}
          environments:
            # This template example enforces which clusters an application team deploys to, but allows
            # the association of an app by HelmRelease name and namespace. A similar template would
            # support teams using isolation by namespace as a tenancy model.
            - name: dev
              targets:
                - namespace: ${APP_NAMESPACE}
                  clusterRef:
                    kind: GitopsCluster
                    name: dev
                    namespace: flux-system
            - name: test
              targets:
                - namespace: ${APP_NAMESPACE}
                  clusterRef:
                    kind: GitopsCluster
                    name: test
                    namespace: flux-system
            - name: prod
              targets:
                - namespace: ${APP_NAMESPACE}
                  clusterRef:
                    kind: GitopsCluster
                    name: prod
                    namespace: flux-system
          promotion:
            strategy:
              pull-request:
                url: ${APP_REPO_URL}
                branch: ${APP_REPO_BRANCH}
                type: ${APP_REPO_TYPE}
                secretRef:
                  name: ${GIT_CREDENTIALS_SECRET}
